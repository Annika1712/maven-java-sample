# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Java CI with Maven

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:
    name: Build

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven
        
    - name: Build maven
      run: mvn -B package --file pom.xml

    - name: Copy artifact to staging directory
      run: mkdir staging && cp target/*.jar staging

    - name: SonarQube Scan
      run: mvn clean verify org.sonarsource.scanner.maven:sonar-maven-plugin:3.2:sonar -Dsonar.projectKey=annika-maven-example -Dsonar.host.url=${{secrets.SONAR_HOST_URL}} -Dsonar.token=${{secrets.SONAR_TOKEN}}

    - name: Publish Artifacts    
      uses: actions/upload-artifact@v4
      with:
        name: Package
        path: staging
  
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    needs: build

    steps:
    - name: Download artifact from build job
      uses: actions/download-artifact@v3
      with:
        name: Package
    
    - name: copy file to EC2
      uses: moonpathbg/scp_uploader@latest
      with:
        # remote host
        host: ${{ secrets.AWS_HOST_IP }}
        # remote user
        username: ${{secrets.AWS_HOST_USER}}
        # ssh private key (~/.ssh/id_rsa)
        key: ${{ secrets.SSH_PRIVATE_KEY}}
        # source files path
        source: Package
    
    - name: Start application
      uses: tiyee/action-ssh@v1.0.1
      with:
        # Command to execute on the remote server.
        command: java -jar target/*.jar
        # Hostname or IP address of the server.
        host: ${{ secrets.AWS_HOST_IP }}
        # Username for authentication.
        username: ${{secrets.AWS_HOST_USER}}
        # Port number of the server.
        port: # optional, default is 22
        # File  string that contains a private key for either key-based or hostbased user authentication (OpenSSH format)
        privateKey: ${{ secrets.SSH_PRIVATE_KEY}}



    




      
