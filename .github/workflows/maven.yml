# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Java CI with Maven

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:
    name: Build

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven
        
    - name: Build maven
      run: mvn -B package --file pom.xml

    - name: Copy artifact to staging directory
      run: mkdir staging && cp target/*.jar staging

    - name: SonarQube Scan
      run: mvn clean verify sonar:sonar -Dsonar.projectKey=annika-maven-example -Dsonar.host.url=${{secrets.SONAR_HOST_URL}} -Dsonar.token=${{secrets.SONAR_TOKEN}}

    - name: Publish Artifacts    
      uses: actions/upload-artifact@v4
      with:
        name: Package
        path: staging
  
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    needs: build

    steps:
    - name: Download artifact from build job
      uses: actions/download-artifact@v4
      with:
        name: Package

    - name: setup known host SSH
      uses: kielabokkie/ssh-key-and-known-hosts-action@v1.4.1
      with:
        # Private key required to access the host
        ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY}}
        # Hostname or IP to add to the known hosts file
        ssh-host: ${{ secrets.AWS_HOST_IP }}

    - name:
      uses: cross-the-world/ssh-scp-ssh-pipelines@v1.1.4
      with:
        # ssh remote host
        host: ${{ secrets.AWS_HOST_IP }}
        # ssh remote user
        user: ${{ secrets.AWS_HOST_USER }}
        # content of ssh private key. ex raw content of ~/.ssh/id_rsa
        key: ${{ secrets.SSH_PRIVATE_KEY}}
        #Install java on the ubuntu
        first_ssh: sudo apt install default-jre -y
        #Copy artifact to remote host
        scp: Package => .
        # Start application
        last_ssh: java -jar *.jar && exit

  




    




      
